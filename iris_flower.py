# -*- coding: utf-8 -*-
"""Iris_flower.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rLJrQHNYlvFVPzzecoa5IHzMU4PXIFOP
"""

!pip install numpy pandas scikit-learn matplotlib joblib

import numpy as np
import pandas as pd
import sklearn
import matplotlib.pyplot as plt
import joblib

print("All libraries installed successfully!")

from sklearn.datasets import load_iris

iris = load_iris()
X = iris.data
y = iris.target

print("Feature shape:", X.shape)
print("Target shape:", y.shape)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

print("Model training complete!")

from sklearn.metrics import accuracy_score

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

import joblib

joblib.dump(model, "iris_model.pkl")  # Save model
print("Model saved!")

# Load model
loaded_model = joblib.load("iris_model.pkl")
print("Loaded model test accuracy:", loaded_model.score(X_test, y_test))

sample = [[5.1, 3.5, 1.4, 0.2]]  # Example flower data
prediction = loaded_model.predict(sample)
print("Predicted class:", iris.target_names[prediction][0])

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt


url = "https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv"
data = pd.read_csv(url)

# Step 3: Dataset info
print("Dataset head:\n", data.head())
print("\nColumns:", data.columns)
print("\nShape:", data.shape)


X = data.drop('species', axis=1)
y = data['species']


X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)


model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)
print("\nAccuracy:", accuracy_score(y_test, y_pred))


sample = [[5.1, 3.5, 1.4, 0.2]]
print("Predicted class:", model.predict(sample)[0])


plt.scatter(data['sepal_length'], data['sepal_width'], c=pd.factorize(y)[0])
plt.xlabel("Sepal Length")
plt.ylabel("Sepal Width")
plt.title("Iris Dataset Visualization")
plt.show()

