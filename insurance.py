# -*- coding: utf-8 -*-
"""insurance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WH3KT-4ImNDfYQXJlgahv2dKF7YC3JfZ
"""

import pandas as pd

df=pd.read_csv("/content/TravelInsurancePrediction (2).csv")
df

df["GraduateOrNot"]=df["GraduateOrNot"].replace("Yes",1)
df["GraduateOrNot"]=df["GraduateOrNot"].replace("No",0)
print(df["GraduateOrNot"])

df["FrequentFlyer"]=df["FrequentFlyer"].replace("Yes",1)
df["FrequentFlyer"]=df["FrequentFlyer"].replace("No",0)
print(df["FrequentFlyer"])

df["EverTravelledAbroad"]=df["EverTravelledAbroad"].replace("Yes",1)
df["EverTravelledAbroad"]=df["EverTravelledAbroad"].replace("No",0)
print(df["EverTravelledAbroad"])

X=df.values[:,0:7]
X

Y = df.values[:,7]
Y

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.25,random_state=100)#25%data will go in testing ,traintest func will return 4 values thats why 4 variables,random state to keep the splitting random and constant metrics
print(Y_train.shape)

from sklearn.tree import DecisionTreeClassifier
clf=DecisionTreeClassifier(random_state=100)
#fitting the training data
clf.fit(X_train,Y_train)

Y_pred=clf.predict(X_train)
print(Y_pred)